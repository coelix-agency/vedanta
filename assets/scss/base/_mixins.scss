/*
@include placeholder{
    color: #000000;
};
*/
@mixin placeholder {
    &::-webkit-input-placeholder {@content}
    &:-moz-placeholder {@content}
    &::-moz-placeholder {@content}
    &:-ms-input-placeholder {@content}
    &:placeholder {@content}
}

@keyframes underline-run-right{
    0%{
        background-size: 100% 100%;
        background-position: right;
    }
    49%{
        background-size: 0 100%;
        background-position: right;
    }
    50%{
        background-position: left;
        background-size: 0 100%;
    }
    100%{
        background-position: left;
        background-size: 100% 100%;
    }
}
@keyframes underline-run-left{
    0%{
        background-size: 100% 100%;
        background-position: left;
    }
    49%{
        background-size: 0 100%;
        background-position: left;
    }
    50%{
        background-position: right;
        background-size: 0 100%;
    }
    100%{
        background-position: right;
        background-size: 100% 100%;
    }
}
@mixin underline-start-state($color: #000000, $height: 1px, $transitionDuration: 0.3s, $bottom: 0, $position: left, $behavior: remove-on-hover, $runDirection: right){
    background-image: linear-gradient(to top, transparent $bottom, $color $bottom, $color $height+$bottom, transparent $height+$bottom);
    background-repeat: no-repeat;

    @if($behavior == remove-on-hover){
        background-size: 100% 100%;
        transition: background-size $transitionDuration;
        background-position: $position;
    }
    @if($behavior == show-on-hover){
        background-size: 0 100%;
        transition: background-size $transitionDuration;
        background-position: $position;
    }
    @if($behavior == run-on-hover){
        background-size: 100% 100%;
        animation-duration: $transitionDuration;
    }
}
@mixin underline-end-state($behavior: remove-on-hover, $runDirection: right){
    @if($behavior == remove-on-hover){
        background-size: 0 100%;
    }
    @if($behavior == show-on-hover){
        background-size: 100% 100%;
    }
    @if($behavior == run-on-hover) {
        @if($runDirection == right){
            animation-name: underline-run-right;
        }
        @if($runDirection == left){
            animation-name: underline-run-left;
        }
    }
}
@mixin underline($color: #000000, $height: 1px, $transitionDuration: 0.3s, $bottom: 0, $position: left, $behavior: remove-on-hover, $runDirection: right){

    @include underline-start-state($color, $height, $transitionDuration, $bottom, $position, $behavior, $runDirection);
    &.hover,
    &:hover{
        @include underline-end-state($behavior, $runDirection);
    }
}


@mixin show-from-side-opacity-animation-start-state($startTranslateX: 0, $startTranslateY: 0, $transitionDuration: 0.4s, $transitionDelay: 0)
{
    opacity: 0;
    transform: translate($startTranslateX, $startTranslateY);
    transition-property: opacity, transform;
    transition-duration: $transitionDuration;
    transition-delay: $transitionDelay;
}
@mixin show-from-side-opacity-animation-end-state()
{
    opacity: 1;
    transform: translate(0, 0);
}
@mixin show-from-side-opacity-animation($startTranslateX: 0, $startTranslateY: 0, $transitionDuration: 0.4s, $transitionDelay: 0)
{
    @include show-from-side-opacity-animation-start-state($startTranslateX, $startTranslateY, $transitionDuration, $transitionDelay);
    &.animated{
        @include show-from-side-opacity-animation-end-state();
    }
}


@mixin show-from-scale-opacity-animation-start-state($initialScale: 1, $transitionDuration: 0.4s, $transitionDelay: 0)
{
    opacity: 0;
    transform: scale($initialScale);
    transition-property: opacity, transform;
    transition-duration: $transitionDuration;
    transition-delay: $transitionDelay;
}
@mixin show-from-scale-opacity-animation-end-state()
{
    opacity: 1;
    transform: scale(1);
}
@mixin show-from-scale-opacity-animation($initialScale: 1, $transitionDuration: 0.4s, $transitionDelay: 0)
{
    @include show-from-scale-opacity-animation-start-state($initialScale, $transitionDuration, $transitionDelay);
    &.animated{
        @include show-from-scale-opacity-animation-end-state();
    }
}
